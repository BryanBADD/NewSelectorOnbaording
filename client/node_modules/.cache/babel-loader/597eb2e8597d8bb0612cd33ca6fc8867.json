{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from 'redux-logger';\nconst logger = createLogger({\n  /* https://github.com/evgenyrodionov/redux-logger */\n  collapsed: true,\n  diff: true\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\n/* logger must be the last middleware in chain to log actions */\napplyMiddleware(thunk, logger), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nexport default store;","map":{"version":3,"sources":["/Users/bryan/Desktop/My Web Development/mern-auth/client/src/store.js"],"names":["createStore","applyMiddleware","compose","composeWithDevTools","thunk","rootReducer","createLogger","logger","collapsed","diff","initialState","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAAQC,mBAAR,QAAkC,0CAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAEA,MAAMC,MAAM,GAAGD,YAAY,CAAC;AACxB;AACAE,EAAAA,SAAS,EAAE,IAFa;AAGxBC,EAAAA,IAAI,EAAE;AAHkB,CAAD,CAA3B;AAOA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACP,KAAD,CAAnB;AACA,MAAMQ,KAAK,GAAGZ,WAAW,CACvBK,WADuB,EAEvBK,YAFuB,EAGvBP,mBAAmB;AACjB;AACAF,eAAe,CAACG,KAAD,EAAQG,MAAR,CAFE,EAGjBM,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHtB,CAHI,CAAzB;AASA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport {createLogger} from 'redux-logger';\n\nconst logger = createLogger({\n    /* https://github.com/evgenyrodionov/redux-logger */\n    collapsed: true,\n    diff: true\n});\n\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(\n    /* logger must be the last middleware in chain to log actions */\n    applyMiddleware(thunk, logger),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;"]},"metadata":{},"sourceType":"module"}